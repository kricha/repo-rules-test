name: Enforce Dev and Hotfix Only PRs to Main

on:
  pull_request:
    branches:
      - main # Trigger only on PRs targeting main

jobs:
  check-source-branch-for-main:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          
      - name: Check if PR source branch is dev or hotfix/*
        env:
          CURRENT_BRANCH: ${{ github.head_ref }} # Source branch of the PR
          PARENT_BRANCH: main
        run: |
          git fetch --all
          GIT_BASE=${GITHUB_BASE_REF:-main}
          HEAD_REF=$(echo ${{ github.ref }} | sed -e 's#/merge#/head#')
          git fetch origin +${GIT_BASE}:${GIT_BASE}
          git fetch origin +${HEAD_REF}:${HEAD_REF}
          git checkout $CURRENT_BRANCH
          
          CANDIDATE_BRANCHES=("main" "dev")

          PARENT_BRANCH=""
          MIN_DISTANCE=""

          for candidate in "${CANDIDATE_BRANCHES[@]}"; do
            BASE_COMMIT=$(git merge-base "$CURRENT_BRANCH" "origin/$candidate")
            if [[ -n "$BASE_COMMIT" ]]; then
              DISTANCE=$(git rev-list --count "$BASE_COMMIT..$CURRENT_BRANCH")
              if [[ -z "$MIN_DISTANCE" || "$DISTANCE" -lt "$MIN_DISTANCE" ]]; then
                MIN_DISTANCE=$DISTANCE
                PARENT_BRANCH=$candidate
              fi
            fi
          done

          echo "Detected parent branch: $PARENT_BRANCH"

          
          # # Check if we are merging into 'main' and if the current branch is valid
          # if [[ "$PARENT_BRANCH" == "main" ]] && [[ ! "$CURRENT_BRANCH" =~ ^hotfix/.* ]] && [[ "$CURRENT_BRANCH" != "dev" ]]; then
          #   echo "Error: Only PRs from 'dev' or 'hotfix/*' branches are allowed to merge into 'main'."
          #   exit 1
          # fi
