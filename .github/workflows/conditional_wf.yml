name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  SUFFIX: dev-ir

concurrency:
  group: build-and-deploy-${{ github.ref }}
  cancel-in-progress: true  # Cancels previous runs if a new push happe

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Set lowercase image names
        run: |
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "BASE_IMAGE_NAME=${REPO_LOWER}/php-base" > image_names.env
          echo "IMAGE_NAME=${REPO_LOWER}/php-dev" >> image_names.env

      - name: Upload image names
        uses: actions/upload-artifact@v4
        with:
          name: image-names
          path: image_names.env

  check-paths: # Should run after setup
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      should_build_base: ${{ steps.check.outputs.should_build_base }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if Dockerfile or iit files changed
        id: check
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            if git diff --name-only HEAD^ HEAD | grep -E '^(Dockerfile|.docker/php/iit/)'; then
              echo "should_build_base=true" >> $GITHUB_OUTPUT
            else
              echo "should_build_base=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_build_base=true" >> $GITHUB_OUTPUT
          fi

  build-base: # Should run after check path if conditions met
    runs-on: ubuntu-latest
    needs: [setup, check-paths]
    if: needs.check-paths.outputs.should_build_base == 'true'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Build base
        run: |
          echo "base build done...."

  build-dev: # Should run after build base or after check path if build base skipped
    runs-on: ubuntu-latest
    needs: [setup, build-base]
    if: success() || needs.build-base.result == 'skipped'
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Build dev
        run: |
          echo "dev build done...."
          # exit 1


  deploy-dev: # Should run after build dev job complete
    name: Deploy apps to Azure Web App Docker
    runs-on: ubuntu-latest
    needs: build-dev
    # if: ${{ always() && !failure() && !cancelled() }} # Both works
    if: ${{ always() && needs.build-dev.result == 'success' }} # Both works
    environment:
      name: dev
    steps:
      - name: What is here
        run: |
          echo ${{ needs.build-dev.result }}